name: Manage SSL Certificates

on:
  schedule:
    - cron: "0 3 * * 0"   # Every Sunday at 03:00 UTC
  workflow_dispatch:      # Allow manual runs too

jobs:
  certs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Get Droplet Info
        id: droplet
        run: |
          HOSTNAME="${{ vars.DROPLET_HOSTNAME }}"
          IP=$(doctl compute droplet list "$HOSTNAME" --format PublicIPv4 --no-header)
          if [ -z "$IP" ]; then
            echo "Droplet $HOSTNAME not found!" >&2
            exit 1
          fi
          echo "droplet_ip=$IP" >> $GITHUB_OUTPUT

      - name: Run Certbot with DigitalOcean DNS Plugin
        run: |
          mkdir -p ./certs ./do-creds
          echo "dns_digitalocean_token = ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}" > ./do-creds/digitalocean.ini
          chmod 600 ./do-creds/digitalocean.ini

          DOMAIN="${{ github.event.inputs.domain || 'clientmailservices.com' }}"
          SUBDOMAIN="${{ github.event.inputs.subdomain || 'ss' }}"
          if [ -z "$SUBDOMAIN" ] || [ "$SUBDOMAIN" = "@" ]; then
            FQDN="$DOMAIN"
          else
            FQDN="$SUBDOMAIN.$DOMAIN"
          fi

          docker run --rm \
            -v $(pwd)/certs:/etc/letsencrypt \
            -v $(pwd)/do-creds:/etc/letsencrypt/dns-creds:ro \
            certbot/dns-digitalocean certonly \
              --dns-digitalocean \
              --dns-digitalocean-credentials /etc/letsencrypt/dns-creds/digitalocean.ini \
              -d "$FQDN" \
              --non-interactive \
              --agree-tos \
              -m admin@"$DOMAIN"

      - name: Copy Certs to Droplet
        run: |
          IP="${{ steps.droplet.outputs.droplet_ip }}"
          DOMAIN="${{ github.event.inputs.domain || 'clientmailservices.com' }}"
          SUBDOMAIN="${{ github.event.inputs.subdomain || 'ss' }}"
          if [ -z "$SUBDOMAIN" ] || [ "$SUBDOMAIN" = "@" ]; then
            FQDN="$DOMAIN"
          else
            FQDN="$SUBDOMAIN.$DOMAIN"
          fi

          scp -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa \
            certs/live/$FQDN/fullchain.pem \
            certs/live/$FQDN/privkey.pem \
            root@$IP:/etc/nginx/certs/

      - name: Start or Restart Nginx with SSL
        run: |
          IP="${{ steps.droplet.outputs.droplet_ip }}"
          DOMAIN="${{ github.event.inputs.domain || 'clientmailservices.com' }}"
          SUBDOMAIN="${{ github.event.inputs.subdomain || 'ss' }}"
          if [ -z "$SUBDOMAIN" ] || [ "$SUBDOMAIN" = "@" ]; then
            FQDN="$DOMAIN"
          else
            FQDN="$SUBDOMAIN.$DOMAIN"
          fi

          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa root@$IP "
            docker rm -f nginx-test || true
            docker run -d --name nginx-test \
              --restart unless-stopped \
              -p 80:80 -p 443:443 \
              -v /etc/nginx/certs:/etc/nginx/certs:ro \
              nginx:alpine sh -c \"
                cat > /etc/nginx/conf.d/default.conf <<CONF
                events {}
                http {
                  server {
                    listen 80;
                    server_name $FQDN;
                    return 301 https://\\\$host\\\$request_uri;
                  }
                  server {
                    listen 443 ssl;
                    server_name $FQDN;
                    ssl_certificate /etc/nginx/certs/fullchain.pem;
                    ssl_certificate_key /etc/nginx/certs/privkey.pem;
                    location / {
                      return 200 'Hello from HTTPS on $FQDN!\\n';
                    }
                  }
                }
                CONF
                && nginx -g 'daemon off;'
              \"
          "

      - name: Show Summary
        run: |
          echo "### ðŸ”„ SSL Certificate Updated" >> $GITHUB_STEP_SUMMARY
          echo "- Hostname: \`${{ vars.DROPLET_HOSTNAME }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- Public IP: \`${{ steps.droplet.outputs.droplet_ip }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- SSL for: \`${{ github.event.inputs.subdomain || 'ss' }}.${{ github.event.inputs.domain || 'clientmailservices.com' }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- Next scheduled run: Weekly (Sunday 03:00 UTC)" >> $GITHUB_STEP_SUMMARY
